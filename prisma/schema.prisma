// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  roles     Role[]   @relation("UserRoles")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[] @relation("UserRoles")
}

model Room {
  id        Int          @id @default(autoincrement())
  roomType  String
  roomPrice Decimal
  isBooked  Boolean      @default(false)
  photo     String?
  bookings  BookedRoom[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model BookedRoom {
  id                      Int      @id @default(autoincrement())
  guestName               String
  guestEmail              String
  checkInDate             DateTime
  checkOutDate            DateTime
  noOfAdults              Int
  noOfChildren            Int
  totalNoOfGuests         Int
  bookingConfirmationCode String   @unique

  roomId Int
  room   Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
